/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/split.js/dist/split.es.js":
/*!************************************************!*\
  !*** ./node_modules/split.js/dist/split.es.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements\n// and very few assumptions about the user's page layout.\nvar global = typeof window !== 'undefined' ? window : null;\nvar ssr = global === null;\nvar document = !ssr ? global.document : undefined;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () { return false; };\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = ssr\n    ? 'calc'\n    : ((['', '-webkit-', '-moz-', '-o-']\n          .filter(function (prefix) {\n              var el = document.createElement('div');\n              el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n\n              return !!el.style.length\n          })\n          .shift()) + \"calc\");\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) { return typeof v === 'string' || v instanceof String; };\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n    if (isString(el)) {\n        var ele = document.querySelector(el);\n        if (!ele) {\n            throw new Error((\"Selector \" + el + \" did not match a DOM element\"))\n        }\n        return ele\n    }\n\n    return el\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n    var value = options[propName];\n    if (value !== undefined) {\n        return value\n    }\n    return def\n};\n\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n    if (isFirst) {\n        if (gutterAlign === 'end') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    } else if (isLast) {\n        if (gutterAlign === 'start') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    }\n\n    return gutterSize\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n    var gut = document.createElement('div');\n    gut.className = \"gutter gutter-\" + gutterDirection;\n    return gut\n};\n\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n    var style = {};\n\n    if (!isString(size)) {\n        style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n    } else {\n        style[dim] = size;\n    }\n\n    return style\n};\n\nvar defaultGutterStyleFn = function (dim, gutSize) {\n    var obj;\n\n    return (( obj = {}, obj[dim] = (gutSize + \"px\"), obj ));\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n    if ( options === void 0 ) options = {};\n\n    if (ssr) { return {} }\n\n    var ids = idsOption;\n    var dimension;\n    var clientAxis;\n    var position;\n    var positionEnd;\n    var clientSize;\n    var elements;\n\n    // Allow HTMLCollection to be used as an argument when supported\n    if (Array.from) {\n        ids = Array.from(ids);\n    }\n\n    // All DOM elements in the split should have a common parent. We can grab\n    // the first elements parent and hope users read the docs because the\n    // behavior will be whacky otherwise.\n    var firstElement = elementOrSelector(ids[0]);\n    var parent = firstElement.parentNode;\n    var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n    var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n    // Set default options.sizes to equal percentages of the parent element.\n    var sizes = getOption(options, 'sizes') || ids.map(function () { return 100 / ids.length; });\n\n    // Standardize minSize and maxSize to an array if it isn't already.\n    // This allows minSize and maxSize to be passed as a number.\n    var minSize = getOption(options, 'minSize', 100);\n    var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () { return minSize; });\n    var maxSize = getOption(options, 'maxSize', Infinity);\n    var maxSizes = Array.isArray(maxSize) ? maxSize : ids.map(function () { return maxSize; });\n\n    // Get other options\n    var expandToMin = getOption(options, 'expandToMin', false);\n    var gutterSize = getOption(options, 'gutterSize', 10);\n    var gutterAlign = getOption(options, 'gutterAlign', 'center');\n    var snapOffset = getOption(options, 'snapOffset', 30);\n    var snapOffsets = Array.isArray(snapOffset) ? snapOffset : ids.map(function () { return snapOffset; });\n    var dragInterval = getOption(options, 'dragInterval', 1);\n    var direction = getOption(options, 'direction', HORIZONTAL);\n    var cursor = getOption(\n        options,\n        'cursor',\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize'\n    );\n    var gutter = getOption(options, 'gutter', defaultGutterFn);\n    var elementStyle = getOption(\n        options,\n        'elementStyle',\n        defaultElementStyleFn\n    );\n    var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\n    // A lot of the behavior in the rest of the library is paramatized down to\n    // rely on CSS strings and classes.\n    if (direction === HORIZONTAL) {\n        dimension = 'width';\n        clientAxis = 'clientX';\n        position = 'left';\n        positionEnd = 'right';\n        clientSize = 'clientWidth';\n    } else if (direction === 'vertical') {\n        dimension = 'height';\n        clientAxis = 'clientY';\n        position = 'top';\n        positionEnd = 'bottom';\n        clientSize = 'clientHeight';\n    }\n\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\n    // Each helper is bound to a pair object that contains its metadata. This\n    // also makes it easy to store references to listeners that that will be\n    // added and removed.\n    //\n    // Even though there are no other functions contained in them, aliasing\n    // this to self saves 50 bytes or so since it's used so frequently.\n    //\n    // The pair object saves metadata like dragging state, position and\n    // event listener references.\n\n    function setElementSize(el, size, gutSize, i) {\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\n        // by string, like '300px'. This is less than ideal, because it breaks\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n        // make sure you calculate the gutter size by hand.\n        var style = elementStyle(dimension, size, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            el.style[prop] = style[prop];\n        });\n    }\n\n    function setGutterSize(gutterElement, gutSize, i) {\n        var style = gutterStyle(dimension, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            gutterElement.style[prop] = style[prop];\n        });\n    }\n\n    function getSizes() {\n        return elements.map(function (element) { return element.size; })\n    }\n\n    // Supports touch events, but not multitouch, so only the first\n    // finger `touches[0]` is counted.\n    function getMousePosition(e) {\n        if ('touches' in e) { return e.touches[0][clientAxis] }\n        return e[clientAxis]\n    }\n\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n    // which allows the viewport to be resized without additional logic.\n    // Element a's size is the same as offset. b's size is total size - a size.\n    // Both sizes are calculated from the initial parent percentage,\n    // then the gutter size is subtracted.\n    function adjust(offset) {\n        var a = elements[this.a];\n        var b = elements[this.b];\n        var percentage = a.size + b.size;\n\n        a.size = (offset / this.size) * percentage;\n        b.size = percentage - (offset / this.size) * percentage;\n\n        setElementSize(a.element, a.size, this[aGutterSize], a.i);\n        setElementSize(b.element, b.size, this[bGutterSize], b.i);\n    }\n\n    // drag, where all the magic happens. The logic is really quite simple:\n    //\n    // 1. Ignore if the pair is not dragging.\n    // 2. Get the offset of the event.\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\n    // 4. Actually adjust each element in the pair to offset.\n    //\n    // ---------------------------------------------------------------------\n    // |    | <- a.minSize               ||              b.minSize -> |    |\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n    // |    |  |                         ||                        |  |    |\n    // |    |  |                         ||                        |  |    |\n    // ---------------------------------------------------------------------\n    // | <- this.start                                        this.size -> |\n    function drag(e) {\n        var offset;\n        var a = elements[this.a];\n        var b = elements[this.b];\n\n        if (!this.dragging) { return }\n\n        // Get the offset of the event from the first side of the\n        // pair `this.start`. Then offset by the initial position of the\n        // mouse compared to the gutter size.\n        offset =\n            getMousePosition(e) -\n            this.start +\n            (this[aGutterSize] - this.dragOffset);\n\n        if (dragInterval > 1) {\n            offset = Math.round(offset / dragInterval) * dragInterval;\n        }\n\n        // If within snapOffset of min or max, set offset to min or max.\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n        // Include the appropriate gutter sizes to prevent overflows.\n        if (offset <= a.minSize + a.snapOffset + this[aGutterSize]) {\n            offset = a.minSize + this[aGutterSize];\n        } else if (\n            offset >=\n            this.size - (b.minSize + b.snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.minSize + this[bGutterSize]);\n        }\n\n        if (offset >= a.maxSize - a.snapOffset + this[aGutterSize]) {\n            offset = a.maxSize + this[aGutterSize];\n        } else if (\n            offset <=\n            this.size - (b.maxSize - b.snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.maxSize + this[bGutterSize]);\n        }\n\n        // Actually adjust the size.\n        adjust.call(this, offset);\n\n        // Call the drag callback continously. Don't do anything too intensive\n        // in this callback.\n        getOption(options, 'onDrag', NOOP)(getSizes());\n    }\n\n    // Cache some important sizes when drag starts, so we don't have to do that\n    // continously:\n    //\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\n    // `start`: The leading side of the first element.\n    //\n    // ------------------------------------------------\n    // |      aGutterSize -> |||                      |\n    // |                     |||                      |\n    // |                     |||                      |\n    // |                     ||| <- bGutterSize       |\n    // ------------------------------------------------\n    // | <- start                             size -> |\n    function calculateSizes() {\n        // Figure out the parent size minus padding.\n        var a = elements[this.a].element;\n        var b = elements[this.b].element;\n\n        var aBounds = a[getBoundingClientRect]();\n        var bBounds = b[getBoundingClientRect]();\n\n        this.size =\n            aBounds[dimension] +\n            bBounds[dimension] +\n            this[aGutterSize] +\n            this[bGutterSize];\n        this.start = aBounds[position];\n        this.end = aBounds[positionEnd];\n    }\n\n    function innerSize(element) {\n        // Return nothing if getComputedStyle is not supported (< IE9)\n        // Or if parent element has no layout yet\n        if (!getComputedStyle) { return null }\n\n        var computedStyle = getComputedStyle(element);\n\n        if (!computedStyle) { return null }\n\n        var size = element[clientSize];\n\n        if (size === 0) { return null }\n\n        if (direction === HORIZONTAL) {\n            size -=\n                parseFloat(computedStyle.paddingLeft) +\n                parseFloat(computedStyle.paddingRight);\n        } else {\n            size -=\n                parseFloat(computedStyle.paddingTop) +\n                parseFloat(computedStyle.paddingBottom);\n        }\n\n        return size\n    }\n\n    // When specifying percentage sizes that are less than the computed\n    // size of the element minus the gutter, the lesser percentages must be increased\n    // (and decreased from the other elements) to make space for the pixels\n    // subtracted by the gutters.\n    function trimToMin(sizesToTrim) {\n        // Try to get inner size of parent element.\n        // If it's no supported, return original sizes.\n        var parentSize = innerSize(parent);\n        if (parentSize === null) {\n            return sizesToTrim\n        }\n\n        if (minSizes.reduce(function (a, b) { return a + b; }, 0) > parentSize) {\n            return sizesToTrim\n        }\n\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\n        var excessPixels = 0;\n        var toSpare = [];\n\n        var pixelSizes = sizesToTrim.map(function (size, i) {\n            // Convert requested percentages to pixel sizes\n            var pixelSize = (parentSize * size) / 100;\n            var elementGutterSize = getGutterSize(\n                gutterSize,\n                i === 0,\n                i === sizesToTrim.length - 1,\n                gutterAlign\n            );\n            var elementMinSize = minSizes[i] + elementGutterSize;\n\n            // If element is too smal, increase excess pixels by the difference\n            // and mark that it has no pixels to spare\n            if (pixelSize < elementMinSize) {\n                excessPixels += elementMinSize - pixelSize;\n                toSpare.push(0);\n                return elementMinSize\n            }\n\n            // Otherwise, mark the pixels it has to spare and return it's original size\n            toSpare.push(pixelSize - elementMinSize);\n            return pixelSize\n        });\n\n        // If nothing was adjusted, return the original sizes\n        if (excessPixels === 0) {\n            return sizesToTrim\n        }\n\n        return pixelSizes.map(function (pixelSize, i) {\n            var newPixelSize = pixelSize;\n\n            // While there's still pixels to take, and there's enough pixels to spare,\n            // take as many as possible up to the total excess pixels\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n                var takenPixels = Math.min(\n                    excessPixels,\n                    toSpare[i] - excessPixels\n                );\n\n                // Subtract the amount taken for the next iteration\n                excessPixels -= takenPixels;\n                newPixelSize = pixelSize - takenPixels;\n            }\n\n            // Return the pixel size adjusted as a percentage\n            return (newPixelSize / parentSize) * 100\n        })\n    }\n\n    // stopDragging is very similar to startDragging in reverse.\n    function stopDragging() {\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        if (self.dragging) {\n            getOption(options, 'onDragEnd', NOOP)(getSizes());\n        }\n\n        self.dragging = false;\n\n        // Remove the stored event listeners. This is why we store them.\n        global[removeEventListener]('mouseup', self.stop);\n        global[removeEventListener]('touchend', self.stop);\n        global[removeEventListener]('touchcancel', self.stop);\n        global[removeEventListener]('mousemove', self.move);\n        global[removeEventListener]('touchmove', self.move);\n\n        // Clear bound function references\n        self.stop = null;\n        self.move = null;\n\n        a[removeEventListener]('selectstart', NOOP);\n        a[removeEventListener]('dragstart', NOOP);\n        b[removeEventListener]('selectstart', NOOP);\n        b[removeEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = '';\n        a.style.webkitUserSelect = '';\n        a.style.MozUserSelect = '';\n        a.style.pointerEvents = '';\n\n        b.style.userSelect = '';\n        b.style.webkitUserSelect = '';\n        b.style.MozUserSelect = '';\n        b.style.pointerEvents = '';\n\n        self.gutter.style.cursor = '';\n        self.parent.style.cursor = '';\n        document.body.style.cursor = '';\n    }\n\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\n    // It also adds event listeners for mouse/touch events,\n    // and prevents selection while dragging so avoid the selecting text.\n    function startDragging(e) {\n        // Right-clicking can't start dragging.\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Alias frequently used variables to save space. 200 bytes.\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        // Call the onDragStart callback.\n        if (!self.dragging) {\n            getOption(options, 'onDragStart', NOOP)(getSizes());\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault();\n\n        // Set the dragging property of the pair object.\n        self.dragging = true;\n\n        // Create two event listeners bound to the same pair object and store\n        // them in the pair object.\n        self.move = drag.bind(self);\n        self.stop = stopDragging.bind(self);\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        global[addEventListener]('mouseup', self.stop);\n        global[addEventListener]('touchend', self.stop);\n        global[addEventListener]('touchcancel', self.stop);\n        global[addEventListener]('mousemove', self.move);\n        global[addEventListener]('touchmove', self.move);\n\n        // Disable selection. Disable!\n        a[addEventListener]('selectstart', NOOP);\n        a[addEventListener]('dragstart', NOOP);\n        b[addEventListener]('selectstart', NOOP);\n        b[addEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = 'none';\n        a.style.webkitUserSelect = 'none';\n        a.style.MozUserSelect = 'none';\n        a.style.pointerEvents = 'none';\n\n        b.style.userSelect = 'none';\n        b.style.webkitUserSelect = 'none';\n        b.style.MozUserSelect = 'none';\n        b.style.pointerEvents = 'none';\n\n        // Set the cursor at multiple levels\n        self.gutter.style.cursor = cursor;\n        self.parent.style.cursor = cursor;\n        document.body.style.cursor = cursor;\n\n        // Cache the initial sizes of the pair.\n        calculateSizes.call(self);\n\n        // Determine the position of the mouse compared to the gutter\n        self.dragOffset = getMousePosition(e) - self.end;\n    }\n\n    // adjust sizes to ensure percentage is within min size and gutter.\n    sizes = trimToMin(sizes);\n\n    // 5. Create pair and element objects. Each pair has an index reference to\n    // elements `a` and `b` of the pair (first and second elements).\n    // Loop through the elements while pairing them off. Every pair gets a\n    // `pair` object and a gutter.\n    //\n    // Basic logic:\n    //\n    // - Starting with the second element `i > 0`, create `pair` objects with\n    //   `a = i - 1` and `b = i`\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n    // - Create gutter elements and add event listeners.\n    // - Set the size of the elements, minus the gutter sizes.\n    //\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    var pairs = [];\n    elements = ids.map(function (id, i) {\n        // Create the element object.\n        var element = {\n            element: elementOrSelector(id),\n            size: sizes[i],\n            minSize: minSizes[i],\n            maxSize: maxSizes[i],\n            snapOffset: snapOffsets[i],\n            i: i,\n        };\n\n        var pair;\n\n        if (i > 0) {\n            // Create the pair object with its metadata.\n            pair = {\n                a: i - 1,\n                b: i,\n                dragging: false,\n                direction: direction,\n                parent: parent,\n            };\n\n            pair[aGutterSize] = getGutterSize(\n                gutterSize,\n                i - 1 === 0,\n                false,\n                gutterAlign\n            );\n            pair[bGutterSize] = getGutterSize(\n                gutterSize,\n                false,\n                i === ids.length - 1,\n                gutterAlign\n            );\n\n            // if the parent has a reverse flex-direction, switch the pair elements.\n            if (\n                parentFlexDirection === 'row-reverse' ||\n                parentFlexDirection === 'column-reverse'\n            ) {\n                var temp = pair.a;\n                pair.a = pair.b;\n                pair.b = temp;\n            }\n        }\n\n        // Determine the size of the current element. IE8 is supported by\n        // staticly assigning sizes without draggable gutters. Assigns a string\n        // to `size`.\n        //\n        // Create gutter elements for each pair.\n        if (i > 0) {\n            var gutterElement = gutter(i, direction, element.element);\n            setGutterSize(gutterElement, gutterSize, i);\n\n            // Save bound event listener for removal later\n            pair[gutterStartDragging] = startDragging.bind(pair);\n\n            // Attach bound event listener\n            gutterElement[addEventListener](\n                'mousedown',\n                pair[gutterStartDragging]\n            );\n            gutterElement[addEventListener](\n                'touchstart',\n                pair[gutterStartDragging]\n            );\n\n            parent.insertBefore(gutterElement, element.element);\n\n            pair.gutter = gutterElement;\n        }\n\n        setElementSize(\n            element.element,\n            element.size,\n            getGutterSize(\n                gutterSize,\n                i === 0,\n                i === ids.length - 1,\n                gutterAlign\n            ),\n            i\n        );\n\n        // After the first iteration, and we have a pair object, append it to the\n        // list of pairs.\n        if (i > 0) {\n            pairs.push(pair);\n        }\n\n        return element\n    });\n\n    function adjustToMin(element) {\n        var isLast = element.i === pairs.length;\n        var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n\n        calculateSizes.call(pair);\n\n        var size = isLast\n            ? pair.size - element.minSize - pair[bGutterSize]\n            : element.minSize + pair[aGutterSize];\n\n        adjust.call(pair, size);\n    }\n\n    elements.forEach(function (element) {\n        var computedSize = element.element[getBoundingClientRect]()[dimension];\n\n        if (computedSize < element.minSize) {\n            if (expandToMin) {\n                adjustToMin(element);\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                element.minSize = computedSize;\n            }\n        }\n    });\n\n    function setSizes(newSizes) {\n        var trimmed = trimToMin(newSizes);\n        trimmed.forEach(function (newSize, i) {\n            if (i > 0) {\n                var pair = pairs[i - 1];\n\n                var a = elements[pair.a];\n                var b = elements[pair.b];\n\n                a.size = trimmed[i - 1];\n                b.size = newSize;\n\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n            }\n        });\n    }\n\n    function destroy(preserveStyles, preserveGutter) {\n        pairs.forEach(function (pair) {\n            if (preserveGutter !== true) {\n                pair.parent.removeChild(pair.gutter);\n            } else {\n                pair.gutter[removeEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                pair.gutter[removeEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n            }\n\n            if (preserveStyles !== true) {\n                var style = elementStyle(\n                    dimension,\n                    pair.a.size,\n                    pair[aGutterSize]\n                );\n\n                Object.keys(style).forEach(function (prop) {\n                    elements[pair.a].element.style[prop] = '';\n                    elements[pair.b].element.style[prop] = '';\n                });\n            }\n        });\n    }\n\n    return {\n        setSizes: setSizes,\n        getSizes: getSizes,\n        collapse: function collapse(i) {\n            adjustToMin(elements[i]);\n        },\n        destroy: destroy,\n        parent: parent,\n        pairs: pairs,\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Split);\n\n\n//# sourceURL=webpack://gulp/./node_modules/split.js/dist/split.es.js?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_theme_switcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/theme-switcher.js */ \"./src/js/modules/theme-switcher.js\");\n/* harmony import */ var _modules_full_screen_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/full-screen.js */ \"./src/js/modules/full-screen.js\");\n/* harmony import */ var _modules_sidebars_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/sidebars.js */ \"./src/js/modules/sidebars.js\");\n/* harmony import */ var _modules_temp_main_content_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/temp-main-content.js */ \"./src/js/modules/temp-main-content.js\");\n/* harmony import */ var _modules_split_window_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/split-window.js */ \"./src/js/modules/split-window.js\");\n/* harmony import */ var _modules_sidebar_resizer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/sidebar-resizer.js */ \"./src/js/modules/sidebar-resizer.js\");\n/* harmony import */ var _modules_login_menu_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/login-menu.js */ \"./src/js/modules/login-menu.js\");\n/* harmony import */ var _modules_left_sidebar_tabs_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/left-sidebar-tabs.js */ \"./src/js/modules/left-sidebar-tabs.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_modules_theme_switcher_js__WEBPACK_IMPORTED_MODULE_0__.themeSwitcher)();\r\n(0,_modules_full_screen_js__WEBPACK_IMPORTED_MODULE_1__.fullScreen)();\r\n(0,_modules_sidebars_js__WEBPACK_IMPORTED_MODULE_2__.sideBar)();\r\n(0,_modules_temp_main_content_js__WEBPACK_IMPORTED_MODULE_3__.tempMainContent)();\r\n(0,_modules_split_window_js__WEBPACK_IMPORTED_MODULE_4__.splitWindow)();\r\n(0,_modules_sidebar_resizer_js__WEBPACK_IMPORTED_MODULE_5__.sidebarResizer)();\r\n(0,_modules_login_menu_js__WEBPACK_IMPORTED_MODULE_6__.loginMenu)();\r\n(0,_modules_left_sidebar_tabs_js__WEBPACK_IMPORTED_MODULE_7__.leftSidebarTabs)();\r\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/full-screen.js":
/*!***************************************!*\
  !*** ./src/js/modules/full-screen.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fullScreen\": () => (/* binding */ fullScreen)\n/* harmony export */ });\nconst fullScreen = () => {\r\n    const fsBtn = document.querySelector(\".full-screen-btn\");\r\n    const elem = document.documentElement;\r\n\r\n    fsBtn.addEventListener(\"click\", () => {\r\n        console.log(\"click\");\r\n        closeFullscreen();\r\n        openFullscreen();\r\n        fsBtn.classList.toggle(\"activeFs\");\r\n    });\r\n\r\n    /* Open Full Screen */\r\n    function openFullscreen() {\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.mozRequestFullScreen) {\r\n            /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        } else if (elem.webkitRequestFullscreen) {\r\n            /* Chrome, Safari and Opera */\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) {\r\n            /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    /* Close Full Screen */\r\n    function closeFullscreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            /* Firefox */\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            /* Chrome, Safari and Opera */\r\n            document.webkitExitFullscreen();\r\n        } else if (document.msExitFullscreen) {\r\n            /* IE/Edge */\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/full-screen.js?");

/***/ }),

/***/ "./src/js/modules/left-sidebar-tabs.js":
/*!*********************************************!*\
  !*** ./src/js/modules/left-sidebar-tabs.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leftSidebarTabs\": () => (/* binding */ leftSidebarTabs)\n/* harmony export */ });\nconst leftSidebarTabs = () => {\r\n    const tabBtnFolder = document.querySelector(\".folder-tab\");\r\n    const tabBtnSearch = document.querySelector(\".search-tab\");\r\n    const folderContent = document.querySelector(\".tabs-folder-content\");\r\n    const searchContent = document.querySelector(\".tabs-search-content\");\r\n\r\n    tabBtnFolder.addEventListener(\"click\", () => {\r\n        tabBtnFolder.classList.add(\"active-tab\");\r\n        tabBtnSearch.classList.remove(\"active-tab\");\r\n        folderContent.classList.remove(\"dn\");\r\n        searchContent.classList.add(\"dn\");\r\n    });\r\n\r\n    tabBtnSearch.addEventListener(\"click\", () => {\r\n        tabBtnSearch.classList.add(\"active-tab\");\r\n        tabBtnFolder.classList.remove(\"active-tab\");\r\n        folderContent.classList.add(\"dn\");\r\n        searchContent.classList.remove(\"dn\");\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/left-sidebar-tabs.js?");

/***/ }),

/***/ "./src/js/modules/login-menu.js":
/*!**************************************!*\
  !*** ./src/js/modules/login-menu.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loginMenu\": () => (/* binding */ loginMenu)\n/* harmony export */ });\nconst loginMenu = () => {\r\n    const logBtn = document.querySelector(\".sign-in-up\");\r\n    const logMenu = document.querySelector(\".login-menu\");\r\n\r\n    logBtn.addEventListener(\"click\", () => {\r\n        logMenu.classList.toggle(\"login-menu-hidden\");\r\n    });\r\n\r\n    // закрити підменю, якщо клік був не по кнопці або не по субменю\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (\r\n            !e.target.closest(\".sign-in-up\") &&\r\n            !e.target.closest(\".login-menu\")\r\n        ) {\r\n            closelogMenu();\r\n        }\r\n    });\r\n\r\n    function closelogMenu() {\r\n        logMenu.classList.add(\"login-menu-hidden\");\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/login-menu.js?");

/***/ }),

/***/ "./src/js/modules/sidebar-resizer.js":
/*!*******************************************!*\
  !*** ./src/js/modules/sidebar-resizer.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sidebarResizer\": () => (/* binding */ sidebarResizer)\n/* harmony export */ });\nconst sidebarResizer = () => {\r\n    const rightSidebar = document.querySelector(\".window__right-sidebar\");\r\n    const resizer = document.querySelector(\".right-sidebar__resizer\");\r\n\r\n    // resizer.addEventListener(\"mousedown\", ts);\r\n    // resizer.addEventListener(\"mousemove\", tm);\r\n    let x;\r\n    // let y;\r\n    // let hh;\r\n    let ww;\r\n\r\n    function ts(e) {\r\n        // x = e.touches[0].clientX;\r\n        // y = e.touches[0].clientY;\r\n        // hh = rightSidebar.clientHeight;\r\n        // ww = rightSidebar.clientWidth;\r\n    }\r\n\r\n    function tm(e) {\r\n        // let mx = e.touches[0].clientX;\r\n        // my = e.touches[0].clientY;\r\n        // let cx = mx - x;\r\n        // cy = my - y;\r\n        // rightSidebar.style.width = cx + ww;\r\n        // rightSidebar.style.height = cy + hh;\r\n    }\r\n\r\n    resizer.addEventListener(\"mousedown\", mousedown);\r\n\r\n    function mousedown(e) {\r\n        window.addEventListener(\"mousemove\", mousemove);\r\n        window.addEventListener(\"mouseup\", mouseup);\r\n        const rect = rightSidebar.getBoundingClientRect();\r\n        let prevX = e.clientX;\r\n        // let prevY = e.clientY;\r\n\r\n        function mousemove(e) {\r\n            let newX = prevX - e.clientX;\r\n            // let newY = prevY - e.clientY;\r\n\r\n            // const rect = rightSidebar.getBoundingClientRect();\r\n\r\n            rightSidebar.style.width = rightSidebar.clientWidth - newX + \"px\";\r\n            // rightSidebar.style.width =\r\n            //     Number.parseInt(rightSidebar.style.width) - newX + \"px\";\r\n            // console.log(Number.parseInt(rightSidebar.style.width));\r\n\r\n            // rightSidebar.style.width = rect.top - newY + \"px\";\r\n\r\n            prevX = e.clientX;\r\n            // prevY = e.clientY;\r\n        }\r\n\r\n        function mouseup() {\r\n            window.removeEventListener(\"mousemove\", mousemove);\r\n            window.removeEventListener(\"mouseup\", mouseup);\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/sidebar-resizer.js?");

/***/ }),

/***/ "./src/js/modules/sidebars.js":
/*!************************************!*\
  !*** ./src/js/modules/sidebars.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sideBar\": () => (/* binding */ sideBar)\n/* harmony export */ });\nconst sideBar = () => {\r\n    const leftsideBtn = document.querySelector(\".left-side-btn\");\r\n    const rightsideBtn = document.querySelector(\".right-side-btn\");\r\n    const leftSidebar = document.querySelector(\".window__left-sidebar\");\r\n    const rightSidebar = document.querySelector(\".window__right-sidebar\");\r\n    const wndwBody = document.querySelector(\".window__body\");\r\n    const wndwWorkingSpace = document.querySelector(\".window__working-space\");\r\n    const splitContainer = document.querySelector(\"#split-container\");\r\n    const split1 = document.querySelector(\"#split-1\");\r\n    const split2 = document.querySelector(\"#split-2\");\r\n\r\n    function paddingsForSplitWindows() {\r\n        // paddings for vertical split\r\n        if (splitContainer.classList.contains(\"split-row\")) {\r\n            // забрати/додати бордер-радіус в залежності від того, чи відкриті лівий та правий сайдбари\r\n            if (!leftSidebar.classList.contains(\"is-hidden\")) {\r\n                split1.classList.add(\"with-left-sidebars\");\r\n            } else {\r\n                split1.classList.remove(\"with-left-sidebars\");\r\n            }\r\n            if (!rightSidebar.classList.contains(\"is-hidden\")) {\r\n                split2.classList.add(\"with-right-sidebars\");\r\n                console.log(\"Я тут!!!\");\r\n            } else {\r\n                split2.classList.remove(\"with-right-sidebars\");\r\n            }\r\n            // split2.classList.toggle(\"with-right-sidebars\");\r\n        }\r\n\r\n        // paddings for gorizontal split\r\n        // забрати/додати бордер-радіус в залежності від того, чи відкриті лівий та правий сайдбари\r\n        if (\r\n            !leftSidebar.classList.contains(\"is-hidden\")\r\n            // !rightSidebar.classList.contains(\"is-hidden\")\r\n        ) {\r\n            split2.classList.add(\"with-left-sidebars\");\r\n        } else {\r\n            split2.classList.remove(\"with-left-sidebars\");\r\n        }\r\n        if (\r\n            // !leftSidebar.classList.contains(\"is-hidden\")\r\n            !rightSidebar.classList.contains(\"is-hidden\")\r\n        ) {\r\n            split2.classList.add(\"with-right-sidebars\");\r\n        } else {\r\n            split2.classList.remove(\"with-right-sidebars\");\r\n        }\r\n        if (\r\n            !leftSidebar.classList.contains(\"is-hidden\") &&\r\n            !rightSidebar.classList.contains(\"is-hidden\")\r\n        ) {\r\n            split2.classList.add(\"with-two-sidebars\");\r\n        } else {\r\n            split2.classList.remove(\"with-two-sidebars\");\r\n        }\r\n    }\r\n\r\n    leftsideBtn.addEventListener(\"click\", () => {\r\n        leftsideBtn.classList.toggle(\"active\");\r\n        leftSidebar.classList.toggle(\"is-hidden\");\r\n        wndwWorkingSpace.classList.toggle(\"with-sidebar\");\r\n\r\n        paddingsForSplitWindows();\r\n    });\r\n\r\n    rightsideBtn.addEventListener(\"click\", () => {\r\n        rightsideBtn.classList.toggle(\"active\");\r\n        rightSidebar.classList.toggle(\"is-hidden\");\r\n        if (!rightSidebar.classList.contains(\"is-hidden\")) {\r\n            wndwBody.classList.add(\"with-sidebars\");\r\n        } else {\r\n            wndwBody.classList.remove(\"with-sidebars\");\r\n        }\r\n        paddingsForSplitWindows();\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/sidebars.js?");

/***/ }),

/***/ "./src/js/modules/split-window.js":
/*!****************************************!*\
  !*** ./src/js/modules/split-window.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"splitWindow\": () => (/* binding */ splitWindow)\n/* harmony export */ });\n/* harmony import */ var split_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! split.js */ \"./node_modules/split.js/dist/split.es.js\");\n\r\n\r\nconst splitWindow = () => {\r\n    const mainWindow = document.querySelector(\"[data-main-window]\");\r\n    const splitBtn = document.querySelector(\".window-split-button\");\r\n    const split1 = document.querySelector(\"#split-1\");\r\n    const split2 = document.querySelector(\"#split-2\");\r\n    const subMenuSplit = document.querySelector(\".split-submenu\");\r\n    const splitIconsList = document.querySelectorAll(\r\n        \".window-split-button>span>svg\"\r\n    );\r\n    const subMenuBtnList = document.querySelectorAll(\".submenu-icon-wrapper\");\r\n\r\n    // закрити підменю, якщо клік був не по кнопці або не по субменю\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (\r\n            !e.target.closest(\".window-split-button\") &&\r\n            !e.target.closest(\".split-submenu\")\r\n        ) {\r\n            closeSubMenu();\r\n        }\r\n    });\r\n\r\n    let split = 0; // variable for initialize Split\r\n\r\n    splitBtn.addEventListener(\"click\", () => {\r\n        subMenuSplit.classList.toggle(\"split-submenu-hidden\");\r\n    });\r\n\r\n    subMenuBtnList.forEach((li) => {\r\n        li.addEventListener(\"click\", onSubMenuSplitClick);\r\n    });\r\n\r\n    function onSubMenuSplitClick(e) {\r\n        const currentSplitMode = e.currentTarget.dataset.splitmode;\r\n\r\n        splitIconsList.forEach((el) => {\r\n            el.classList.add(\"dn\");\r\n        });\r\n        const icon = [...splitIconsList].find((el) => {\r\n            return el.dataset.splitmode === currentSplitMode;\r\n        });\r\n        icon.classList.remove(\"dn\");\r\n\r\n        subMenuBtnList.forEach((el) => {\r\n            el.classList.remove(\"active-icon\");\r\n        });\r\n        e.currentTarget.classList.add(\"active-icon\");\r\n\r\n        // включити вибраний режим\r\n        switch (currentSplitMode) {\r\n            case \"one\":\r\n                noSplit();\r\n                break;\r\n            case \"two-row\":\r\n                splitHorizontal();\r\n                break;\r\n            case \"two-col\":\r\n                splitVertical();\r\n                break;\r\n\r\n            default:\r\n                noSplit();\r\n                break;\r\n        }\r\n        closeSubMenu();\r\n    }\r\n    function closeSubMenu() {\r\n        subMenuSplit.classList.add(\"split-submenu-hidden\");\r\n    }\r\n\r\n    function focusInWindow() {\r\n        split1.addEventListener(\"focusin\", () => {\r\n            if (split2.hasAttribute(\"data-active\")) {\r\n                split2.removeAttribute(\"data-active\");\r\n            }\r\n            if (split2.classList.contains(\"in-focus\")) {\r\n                split2.classList.remove(\"in-focus\");\r\n            }\r\n            if (mainWindow.dataset.split === \"1\") {\r\n                split1.classList.remove(\"in-focus\");\r\n            }\r\n            if (mainWindow.dataset.split === \"2\") {\r\n                split1.classList.add(\"in-focus\");\r\n                split1.setAttribute(\"data-active\", \"true\");\r\n            }\r\n        });\r\n\r\n        split2.addEventListener(\"focusin\", () => {\r\n            if (split1.hasAttribute(\"data-active\")) {\r\n                split1.removeAttribute(\"data-active\");\r\n            }\r\n            if (split1.classList.contains(\"in-focus\")) {\r\n                split1.classList.remove(\"in-focus\");\r\n            }\r\n            if (mainWindow.dataset.split === \"1\") {\r\n                split2.classList.remove(\"in-focus\");\r\n            }\r\n            if (mainWindow.dataset.split === \"2\") {\r\n                split2.classList.add(\"in-focus\");\r\n                split2.setAttribute(\"data-active\", \"true\");\r\n            }\r\n        });\r\n    }\r\n    function splitVertical() {\r\n        if (split1.hasAttribute(\"data-active\")) {\r\n            split1.classList.add(\"in-focus\");\r\n            split2.classList.remove(\"dn\");\r\n        }\r\n        if (split2.hasAttribute(\"data-active\")) {\r\n            split2.classList.add(\"in-focus\");\r\n            split1.classList.remove(\"dn\");\r\n        }\r\n\r\n        if (split !== 0) {\r\n            split.destroy();\r\n            split = 0;\r\n        }\r\n        split2.classList.remove(\"dn\");\r\n        mainWindow.dataset.split = \"2\";\r\n        const gutter = document.querySelector(\".gutter\");\r\n        if (gutter) {\r\n            gutter.remove();\r\n        }\r\n        mainWindow.classList.remove(\"split-column\");\r\n        mainWindow.classList.add(\"split-row\");\r\n\r\n        focusInWindow();\r\n\r\n        split = (0,split_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"#split-1\", \"#split-2\"], {\r\n            direction: \"horizontal\", // horizontal, vertical\r\n            minSize: 0,\r\n            gutterSize: 10,\r\n            snapOffset: 0,\r\n            sizes: [50, 50],\r\n        });\r\n    }\r\n\r\n    function splitHorizontal() {\r\n        if (split1.hasAttribute(\"data-active\")) {\r\n            split1.classList.add(\"in-focus\");\r\n            split2.classList.remove(\"dn\");\r\n        }\r\n        if (split2.hasAttribute(\"data-active\")) {\r\n            split2.classList.add(\"in-focus\");\r\n            split1.classList.remove(\"dn\");\r\n        }\r\n\r\n        if (split !== 0) {\r\n            split.destroy();\r\n            split = 0;\r\n        }\r\n\r\n        mainWindow.dataset.split = \"2\";\r\n        const gutter = document.querySelector(\".gutter\");\r\n        if (gutter) {\r\n            gutter.remove();\r\n        }\r\n        mainWindow.classList.remove(\"split-row\");\r\n        mainWindow.classList.add(\"split-column\");\r\n\r\n        focusInWindow();\r\n\r\n        split = (0,split_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\"#split-1\", \"#split-2\"], {\r\n            direction: \"vertical\", // horizontal, vertical\r\n            minSize: 0,\r\n            gutterSize: 10,\r\n            snapOffset: 0,\r\n            sizes: [50, 50],\r\n        });\r\n    }\r\n\r\n    function noSplit() {\r\n        if (split1.classList.contains(\"in-focus\")) {\r\n            split1.classList.remove(\"in-focus\");\r\n        }\r\n\r\n        if (split2.classList.contains(\"in-focus\")) {\r\n            split2.classList.remove(\"in-focus\");\r\n        }\r\n\r\n        if (split !== 0) {\r\n            split.destroy();\r\n            split = 0;\r\n        }\r\n\r\n        if (!split1.hasAttribute(\"data-active\")) {\r\n            split1.classList.add(\"dn\");\r\n        }\r\n        if (!split2.hasAttribute(\"data-active\")) {\r\n            split2.classList.add(\"dn\");\r\n        }\r\n\r\n        mainWindow.dataset.split = \"1\";\r\n\r\n        const gutter = document.querySelector(\".gutter\");\r\n        if (gutter) {\r\n            gutter.remove();\r\n        }\r\n        mainWindow.classList.remove(\"split-row\");\r\n        mainWindow.classList.remove(\"split-column\");\r\n\r\n        focusInWindow();\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/split-window.js?");

/***/ }),

/***/ "./src/js/modules/temp-main-content.js":
/*!*********************************************!*\
  !*** ./src/js/modules/temp-main-content.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tempMainContent\": () => (/* binding */ tempMainContent)\n/* harmony export */ });\nconst tempMainContent = () => {\r\n    const allButtons = document.querySelectorAll(\".window__header li\");\r\n    const mainBtn = document.querySelector(\"[data-temp-main-content-btn]\");\r\n    const mainContent = document.querySelector(\"[data-temp-main-content]\");\r\n    const mainWindow = document.querySelector(\"[data-main-window]\");\r\n\r\n    mainBtn.addEventListener(\"click\", () => {\r\n        [...mainWindow.firstElementChild.children].forEach((el) => {\r\n            el.classList.add(\"dn\");\r\n        });\r\n        mainContent.classList.remove(\"dn\");\r\n\r\n        allButtons.forEach((btn) => {\r\n            btn.classList.remove(\"active\");\r\n        });\r\n        mainBtn.classList.add(\"active\");\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/temp-main-content.js?");

/***/ }),

/***/ "./src/js/modules/theme-switcher.js":
/*!******************************************!*\
  !*** ./src/js/modules/theme-switcher.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"themeSwitcher\": () => (/* binding */ themeSwitcher)\n/* harmony export */ });\n/* harmony import */ var _templates_themes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../templates/themes.js */ \"./src/templates/themes.js\");\n\r\n// console.log(templateThemes);\r\n\r\nconst themeSwitcher = () => {\r\n    // ==================  Theme Selection ============================\r\n\r\n    const themeInputs = document.querySelectorAll(\"input[data-theme]\");\r\n    const themePreviewCards = document.querySelectorAll(\"li[data-theme]\");\r\n\r\n    // object with themes\r\n    const Theme = {\r\n        \"theme-1\": \"default\",\r\n        \"theme-2\": \"midnight-blue\",\r\n        \"theme-3\": \"deep-ocean\",\r\n        \"theme-4\": \"monochrome\",\r\n        \"theme-5\": \"pitch-black\",\r\n        \"theme-6\": \"other-theme\",\r\n    };\r\n\r\n    // 01 loading user selected theme from localStorage\r\n    themeCustomization();\r\n\r\n    // 02 listen clicks in preview card\r\n    themePreviewCards.forEach((card) => {\r\n        card.addEventListener(\"click\", () => {\r\n            // remove previous theme from BODY\r\n            Object.values(Theme).forEach((el) => {\r\n                document.body.classList.remove(el);\r\n            });\r\n\r\n            // get theme key from data-atribute from selected card\r\n            const theme = card.dataset.theme;\r\n\r\n            // put 'checked = true' for input in card\r\n            const input = [...themeInputs].filter(\r\n                (el) => el.dataset.theme === theme\r\n            );\r\n            input[0].checked = true;\r\n\r\n            // add selected theme on BODY\r\n            document.body.classList.add(Theme[theme]);\r\n\r\n            // save the selected value in the localStorage with the key 'theme'\r\n            localStorage.setItem(\"theme\", theme);\r\n        });\r\n    });\r\n\r\n    function themeCustomization() {\r\n        const savedTheme = localStorage.getItem(\"theme\");\r\n\r\n        if (savedTheme) {\r\n            //if in locolStorage saved theme\r\n            // remove default theme\r\n            document.body.classList.remove(\"default\");\r\n            // add theme from localStorage\r\n            document.body.classList.add(Theme[savedTheme]);\r\n\r\n            // put 'checked = true' for an input of the loaded theme from localStorage\r\n            const input = document.querySelector(\r\n                `input[data-theme=\"${savedTheme}\"]`\r\n            );\r\n            input.checked = true;\r\n        }\r\n    }\r\n    // ==================== Custom Color Selection (positive|negative) ========================\r\n    const positiveInputColor = document.querySelector(\r\n        'input[name=\"positive-color\"]'\r\n    );\r\n    const negativeInputColor = document.querySelector(\r\n        'input[name=\"negative-color\"]'\r\n    );\r\n    const positiveTextList = document.querySelectorAll(\".positive\");\r\n    const negativeTextList = document.querySelectorAll(\".negative\");\r\n\r\n    // 01 loading user selected colors from localStorage\r\n    colorCustomization();\r\n\r\n    // 02 listen input changes\r\n    positiveInputColor.addEventListener(\"input\", () => {\r\n        // saves the selected value for the positive color in the localStorage\r\n        localStorage.setItem(\"positive-color\", positiveInputColor.value);\r\n\r\n        // for all text with .positive class change color on selected\r\n        positiveTextList.forEach((el) => {\r\n            el.style.color = positiveInputColor.value;\r\n        });\r\n    });\r\n\r\n    negativeInputColor.addEventListener(\"input\", () => {\r\n        // saves the selected value for the negative color in the localStorage\r\n        localStorage.setItem(\"negative-color\", negativeInputColor.value);\r\n\r\n        // for all text with .negative class change color on selected\r\n        negativeTextList.forEach((el) => {\r\n            el.style.color = negativeInputColor.value;\r\n        });\r\n    });\r\n\r\n    // function colorCustomization\r\n    function colorCustomization() {\r\n        const savedPositiveColor = localStorage.getItem(\"positive-color\");\r\n        const savedNegativeColor = localStorage.getItem(\"negative-color\");\r\n\r\n        if (savedPositiveColor) {\r\n            // add color from localStorage\r\n            positiveTextList.forEach((el) => {\r\n                el.style.color = savedPositiveColor;\r\n            });\r\n            // change input value to loaded color from localStorage\r\n            positiveInputColor.value = savedPositiveColor;\r\n        }\r\n\r\n        if (savedNegativeColor) {\r\n            // add color from localStorage\r\n            negativeTextList.forEach((el) => {\r\n                el.style.color = savedNegativeColor;\r\n            });\r\n            // change input value to loaded color from localStorage\r\n            negativeInputColor.value = savedNegativeColor;\r\n        }\r\n    }\r\n    // ==================================== open \\ close theme switcher ==============================\r\n    const openBtn = document.querySelector(\".theme-switcher-btn\");\r\n    const closeBtn = document.querySelector(\".close-theme-switcher-btn\");\r\n    const wrapperTheme = document.querySelector(\".theme-switcher-wrapper\");\r\n    const mainWindow = document.querySelector(\"[data-main-window]\");\r\n    const allButtons = document.querySelectorAll(\".window__header li\");\r\n\r\n    openBtn.addEventListener(\"click\", () => {\r\n        wrapperTheme.classList.remove(\"is-hidden\");\r\n        openBtn.classList.add(\"active\");\r\n    });\r\n    closeBtn.addEventListener(\"click\", () => {\r\n        console.log(\"click\");\r\n        wrapperTheme.classList.add(\"is-hidden\");\r\n        openBtn.classList.remove(\"active\");\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/theme-switcher.js?");

/***/ }),

/***/ "./src/templates/themes.js":
/*!*********************************!*\
  !*** ./src/templates/themes.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"templateThemes\": () => (/* binding */ templateThemes)\n/* harmony export */ });\nconst templateThemes = `\r\n    <div class=\"theme-switcher-wrapper dn\">\r\n    <h2>Theme Selection</h2>\r\n    <ul class=\"theme__list\">\r\n        <li class=\"theme__item\" data-theme=\"theme-1\">\r\n            <div class=\"preview__wrapper default\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher1\"\r\n                data-theme=\"theme-1\"\r\n                checked\r\n            />\r\n            <label for=\"color-switcher1\">Default</label>\r\n        </li>\r\n        <li class=\"theme__item\" data-theme=\"theme-2\">\r\n            <div class=\"preview__wrapper midnight-blue\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher2\"\r\n                data-theme=\"theme-2\"\r\n            />\r\n            <label for=\"color-switcher2\">Midnight Blue</label>\r\n        </li>\r\n        <li class=\"theme__item\" data-theme=\"theme-3\">\r\n            <div class=\"preview__wrapper deep-ocean\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher3\"\r\n                data-theme=\"theme-3\"\r\n            />\r\n            <label for=\"color-switcher3\">Deep Ocean</label>\r\n        </li>\r\n        <li class=\"theme__item\" data-theme=\"theme-4\">\r\n            <div class=\"preview__wrapper monochrome\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher4\"\r\n                data-theme=\"theme-4\"\r\n            />\r\n            <label for=\"color-switcher4\">Monochrome</label>\r\n        </li>\r\n        <li class=\"theme__item\" data-theme=\"theme-5\">\r\n            <div class=\"preview__wrapper pitch-black\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher5\"\r\n                data-theme=\"theme-5\"\r\n            />\r\n            <label for=\"color-switcher5\">Pitch Black</label>\r\n        </li>\r\n        <li class=\"theme__item\" data-theme=\"theme-6\">\r\n            <div class=\"preview__wrapper other-theme\">\r\n                <div class=\"preview\">\r\n                    <div class=\"preview__header\">\r\n                        <div class=\"preview__text\"></div>\r\n                    </div>\r\n                    <div class=\"preview__body\"></div>\r\n                </div>\r\n            </div>\r\n            <input\r\n                type=\"radio\"\r\n                name=\"color-switcher\"\r\n                id=\"color-switcher6\"\r\n                data-theme=\"theme-6\"\r\n            />\r\n            <label for=\"color-switcher6\">Other Theme</label>\r\n        </li>\r\n    </ul>\r\n    <h2>Custom Color Selections</h2>\r\n    <div class=\"colors\">\r\n        <label for=\"positive-color\">Positive Color:\r\n            <input\r\n                type=\"color\"\r\n                name=\"positive-color\"\r\n                id=\"positive-color\"\r\n                value=\"#57d03b\"\r\n            />\r\n        </label>\r\n        <label for=\"negative-color\">Negative Color:\r\n            <input\r\n                type=\"color\"\r\n                name=\"negative-color\"\r\n                id=\"negative-color\"\r\n                value=\"#ff3c41\"\r\n            />\r\n        </label>\r\n    </div>\r\n</div>\r\n`;\r\n\n\n//# sourceURL=webpack://gulp/./src/templates/themes.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;